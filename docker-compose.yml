version: '3.7'

volumes:
  pg_bot_data:
  redis_data:

services:
  db:
    container_name: db_container
    image: postgres:16-alpine3.19
    env_file: .env
    restart: always
    volumes:
      - pg_bot_data:/var/lib/postgresql/data
    ports:
      - "54321:5432"

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 3
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=250MB"
    deploy:
      resources:
        limits:
          memory: 2GB
    
  redis:
    container_name: redis_container
    image: redis:7.2-alpine
    env_file: .env
    restart: always
    volumes:
      - redis_data:/var/redis_data
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${PASSWORD_REDIS}
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${PASSWORD_REDIS}", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 3

  bot:
    container_name: bot_container
    # build: ./bot/
    image: bkslab/work_for_everyone:1.01
    env_file: .env
    restart: always
    deploy:
      resources:
        limits:
          memory: 2GB
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    